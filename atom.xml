<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>开朗的博客</title>
  <subtitle>Front End</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangkailang.github.io/"/>
  <updated>2016-03-25T10:16:18.000Z</updated>
  <id>http://wangkailang.github.io/</id>
  
  <author>
    <name>王开朗</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React,node,ES6,JSX,Webpack示例</title>
    <link href="http://wangkailang.github.io/2016/03/25/React-node-ES6-JSX-Webpack%E7%A4%BA%E4%BE%8B/"/>
    <id>http://wangkailang.github.io/2016/03/25/React-node-ES6-JSX-Webpack示例/</id>
    <published>2016-03-25T07:19:18.000Z</published>
    <updated>2016-03-25T10:16:18.000Z</updated>
    
    <content type="html">&lt;p&gt;在 node下搭建起react的示例（支持ES6，JSX），webpack管理。&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/buildGoodWeb/react/tree/master/react_es6_jsx_webpack_example&quot; title=&quot;[wangkailang] [https://github.com/buildGoodWeb/react/tree/master/react_es6_jsx_webpack_example]&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github源代码&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# 新建一个项目文件
mkdir react_example
# 进入文件目录
cd react_example
# 初始化node项目
npm init
# JSX,ES6支持
npm install babel-loader babel-core babel-preset-es2015 babel-preset-react --save-dev
＃ react支持
npm install react react-dom --save-dev
# ES6支持文件
touch .babelrc
#文件中添加{ &amp;quot;presets&amp;quot;: [&amp;quot;es2015&amp;quot;] }
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;安装-Webpack&quot;&gt;&lt;a href=&quot;#安装-Webpack&quot; class=&quot;headerlink&quot; title=&quot;安装 Webpack&quot;&gt;&lt;/a&gt;安装 Webpack&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;npm install webpack --save-dev
#webpack服务器
npm install webpack-dev-server --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;创建webpack管理文件webpack-config-js&quot;&gt;&lt;a href=&quot;#创建webpack管理文件webpack-config-js&quot; class=&quot;headerlink&quot; title=&quot;创建webpack管理文件webpack.config.js&quot;&gt;&lt;/a&gt;创建webpack管理文件webpack.config.js&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;touch webpack.config.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;webpack基本配置如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var path = require(&amp;apos;path&amp;apos;);

module.exports = {
    entry: &amp;apos;./entry.js&amp;apos;,
    output: {
        path: path.join(__dirname, &amp;apos;/dist&amp;apos;),
        filename: &amp;apos;bundle.js&amp;apos;
    },
    # resolve 指定可以被 import 的文件后缀。
    # 比如 Hello.jsx 这样的文件就可以直接用 import Hello from &amp;apos;Hello&amp;apos; 引用。
    resolve: {
        extensions: [&amp;apos;&amp;apos;, &amp;apos;.js&amp;apos;, &amp;apos;.jsx&amp;apos;]
    },
    module: {
        # loaders 指定 babel-loader 编译后缀名为 .js 或者 .jsx 的文件，这样你就可以在这两种类型的文件中自由使用 JSX 和 ES6 了。
        loaders: [
            {
              test: /\.js|jsx$/,
              exclude: /node_modules/,
              loader: &amp;apos;babel&amp;apos;,
              query: {
                presets: [&amp;apos;react&amp;apos;, &amp;apos;es2015&amp;apos;]
              }
            }
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##入口文件&lt;br&gt;        touch entry.jsx&lt;/p&gt;
&lt;h2 id=&quot;监听编译&quot;&gt;&lt;a href=&quot;#监听编译&quot; class=&quot;headerlink&quot; title=&quot;监听编译:&quot;&gt;&lt;/a&gt;监听编译:&lt;/h2&gt;&lt;h3 id=&quot;pakckage-json中添加指令&quot;&gt;&lt;a href=&quot;#pakckage-json中添加指令&quot; class=&quot;headerlink&quot; title=&quot;pakckage.json中添加指令&quot;&gt;&lt;/a&gt;pakckage.json中添加指令&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
    &amp;quot;start&amp;quot;: &amp;quot;webpack-dev-server --hot --progress --colors&amp;quot;,
    &amp;quot;build&amp;quot;: &amp;quot;webpack&amp;quot;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;执行指令&quot;&gt;&lt;a href=&quot;#执行指令&quot; class=&quot;headerlink&quot; title=&quot;执行指令&quot;&gt;&lt;/a&gt;执行指令&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;npm run build
npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 node下搭建起react的示例（支持ES6，JSX），webpack管理。&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/buildGoodW
    
    </summary>
    
      <category term="React" scheme="http://wangkailang.github.io/categories/React/"/>
    
    
      <category term="React" scheme="http://wangkailang.github.io/tags/React/"/>
    
      <category term="Webpack" scheme="http://wangkailang.github.io/tags/Webpack/"/>
    
      <category term="ES6" scheme="http://wangkailang.github.io/tags/ES6/"/>
    
      <category term="node" scheme="http://wangkailang.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>react入门练习</title>
    <link href="http://wangkailang.github.io/2016/03/24/react%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A0/"/>
    <id>http://wangkailang.github.io/2016/03/24/react入门练习/</id>
    <published>2016-03-24T04:20:48.000Z</published>
    <updated>2016-03-24T07:56:41.000Z</updated>
    
    <content type="html">&lt;p&gt;React实现实时搜索查询，快速选择&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wangkailang.github.io/uploads/fliterSearchProduct.html&quot; title=&quot;[wangkailang] [http://wangkailang.github.io/uploads/fliterSearchProduct.html]&quot;&gt;效果查看&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;思路分析&quot;&gt;&lt;a href=&quot;#思路分析&quot; class=&quot;headerlink&quot; title=&quot;思路分析&quot;&gt;&lt;/a&gt;思路分析&lt;/h2&gt;&lt;h3 id=&quot;原型（mock）&quot;&gt;&lt;a href=&quot;#原型（mock）&quot; class=&quot;headerlink&quot; title=&quot;原型（mock）&quot;&gt;&lt;/a&gt;原型（mock）&lt;/h3&gt;  &lt;img src=&quot;/uploads/react-filter-serach-pic.png&quot; title=&quot;最终效果图片&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;拆分原型为一个组件树&quot;&gt;&lt;a href=&quot;#拆分原型为一个组件树&quot; class=&quot;headerlink&quot; title=&quot;拆分原型为一个组件树&quot;&gt;&lt;/a&gt;拆分原型为一个组件树&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;遵循&lt;strong&gt;单一功能原则&lt;/strong&gt;，指的是，理想状态下一个组件应该只做一件事，假如它功能逐渐变大就需要被拆分成更小的子组件。&lt;br&gt; 原型界面和数据模型在 信息构造 方面都要一致 （JSON数据模型与UI组件结构一致性）&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;img src=&quot;/uploads/react-filter-search-fenxi.png&quot; title=&quot;组建查分规划图片&quot;&gt;
&lt;p&gt;将原型划分为5个组件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;FilterableProductTable&lt;/em&gt; 包含整个例子的容器&lt;/li&gt;
&lt;li&gt;&lt;em&gt;SearchBar&lt;/em&gt; 接受所有 用户输入（ user input ）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ProductTable&lt;/em&gt; 根据 用户输入（ user input ） 过滤和展示 数据集合（ data collection ）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ProductCategoryRow&lt;/em&gt; 为每个 分类（ category ） 展示一列表头&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ProductRow&lt;/em&gt; 为每个 产品（ product ） 展示一列&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;创建静态版本&quot;&gt;&lt;a href=&quot;#创建静态版本&quot; class=&quot;headerlink&quot; title=&quot;创建静态版本&quot;&gt;&lt;/a&gt;创建静态版本&lt;/h2&gt;&lt;p&gt;通过组件树，简单的将数据模型渲染到UI上。&lt;br&gt;构建一个静态的版本仅需要大量的输入，而不需要思考。&lt;br&gt;创建一个渲染数据模型的应用的静态版本，你将会构造一些组件，这些组件重用其它组件，并且通过 props 传递数据。&lt;br&gt;props 是一种从父级向子级传递数据的方式。&lt;/p&gt;
&lt;h2 id=&quot;识别最小（最完整）代表UI的state&quot;&gt;&lt;a href=&quot;#识别最小（最完整）代表UI的state&quot; class=&quot;headerlink&quot; title=&quot;识别最小（最完整）代表UI的state&quot;&gt;&lt;/a&gt;识别最小（最完整）代表UI的state&lt;/h2&gt;&lt;p&gt;为了使 UI 可交互，需要能够触发底层数据模型的变化。 React 通过 state 使这变得简单。&lt;br&gt;state 是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户输入的搜索文本&lt;/li&gt;
&lt;li&gt;复选框的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;确认state生命周期&quot;&gt;&lt;a href=&quot;#确认state生命周期&quot; class=&quot;headerlink&quot; title=&quot;确认state生命周期&quot;&gt;&lt;/a&gt;确认state生命周期&lt;/h2&gt;&lt;p&gt; React 中数据是沿着组件树从上到下单向流动的。&lt;br&gt; 我们在应用中应用这个策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ProductTable 需要基于 state 过滤产品列表，SearchBar 需要显示搜索文本和复选框状态。&lt;/li&gt;
&lt;li&gt;共同拥有者组件是 FilterableProductTable 。&lt;/li&gt;
&lt;li&gt;理论上，过滤文本和复选框值位于 FilterableProductTable 中是合适的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;给 FilterableProductTable 添加 getInitialState() 方法，该方法返回 {filterText: ‘’, inStockOnly: false} 来反映应用的初始化状态。&lt;br&gt;传递 filterText 和 inStockOnly 给 ProductTable 和 SearchBar 作为 prop 。&lt;br&gt;使用这些 props 来过滤 ProductTable 中的行，设置在 SearchBar 中表单字段的值。&lt;/p&gt;
&lt;h2 id=&quot;添加反向数据流&quot;&gt;&lt;a href=&quot;#添加反向数据流&quot; class=&quot;headerlink&quot; title=&quot;添加反向数据流&quot;&gt;&lt;/a&gt;添加反向数据流&lt;/h2&gt;&lt;p&gt;无论何时用户改变了表单，都要更新 state 来反映用户的输入。&lt;br&gt;由于组件只能更新自己的 state ， FilterableProductTable 将会传递一个回调函数给 SearchBar ，此函数将会在 state 应该被改变的时候触发。&lt;br&gt;使用 input 的 onChange 事件来监听用户输入，从而确定何时触发回调函数。&lt;br&gt;FilterableProductTable 传递的回调函数将会调用 setState() ，然后应用将会被更新。&lt;/p&gt;
&lt;h2 id=&quot;源代码&quot;&gt;&lt;a href=&quot;#源代码&quot; class=&quot;headerlink&quot; title=&quot;源代码&quot;&gt;&lt;/a&gt;源代码&lt;/h2&gt;&lt;p&gt;相关依赖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.15/browser.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.15/browser.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var PRODUCTS = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Sporting Goods&amp;quot;, price: &amp;quot;$49.99&amp;quot;, stocked: true, name: &amp;quot;Football&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Sporting Goods&amp;quot;, price: &amp;quot;$9.99&amp;quot;, stocked: true, name: &amp;quot;Baseball&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Sporting Goods&amp;quot;, price: &amp;quot;$29.99&amp;quot;, stocked: false, name: &amp;quot;Basketball&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Electronics&amp;quot;, price: &amp;quot;$99.99&amp;quot;, stocked: true, name: &amp;quot;iPod Touch&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Electronics&amp;quot;, price: &amp;quot;$399.99&amp;quot;, stocked: false, name: &amp;quot;iPhone 5&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;category: &amp;quot;Electronics&amp;quot;, price: &amp;quot;$199.99&amp;quot;, stocked: true, name: &amp;quot;Nexus 7&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//   FilterProductTable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      - SearchBar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      -  ProductTable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          = ProductCategoryRow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          = ProductRow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var SearchBar = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // onChange 事件来监听用户输入此函数，触发回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handleChange: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.props.onUserInput(this.refs.filterTextInput.value, this.refs.filterStockInput.checked);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;input type=&amp;quot;text&amp;quot; onChange=&amp;#123;this.handleChange&amp;#125; placeholder=&amp;quot;Search...&amp;quot; ref=&amp;quot;filterTextInput&amp;quot; value=&amp;#123;this.props.filterText&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;input type=&amp;quot;checkbox&amp;quot; onChange=&amp;#123;this.handleChange&amp;#125; ref=&amp;quot;filterStockInput&amp;quot; checked=&amp;#123;this.props.stockOnly&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Only show products in stock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ProductCategoryRow = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;th&amp;gt;&amp;#123;this.props.category&amp;#125;&amp;lt;/th&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ProductRow = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name = this.props.product.stocked ? &amp;lt;td&amp;gt;&amp;#123;this.props.product.name&amp;#125;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; : &amp;lt;td className=&amp;quot;red&amp;quot;&amp;gt;&amp;#123;this.props.product.name&amp;#125;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;td&amp;gt;&amp;#123;this.props.product.price&amp;#125;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ProductTable = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var rows = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var categories = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     //循环将所有分类放在categories数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.props.products.forEach(function(product) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if( categories.indexOf(product.category) &amp;lt; 0 ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         categories.push(product.category);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(var i=0; i&amp;lt;categories.length;i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      //分类行插入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      rows.push(&amp;lt;ProductCategoryRow category=&amp;#123;categories[i]&amp;#125; key=&amp;#123;categories[i]&amp;#125;/&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var filterText = this.props.filterText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var stockOnly = this.props.stockOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      this.props.products.forEach(function(product) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //所搜filterText无法与产品名称匹配，跳出当前循环；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //!product.stocked 产品库存false，并且stockOnly为true只查询有库存产品时，跳出当前循环；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if( product.name.indexOf(filterText) === -1 || (stockOnly &amp;amp;&amp;amp; !product.stocked) ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           return ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(product.category == categories[i]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //产品行插入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          rows.push(&amp;lt;ProductRow product=&amp;#123;product&amp;#125; key=&amp;#123;product.name&amp;#125;/&amp;gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;thead&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;td&amp;gt;Name&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;td&amp;gt;Price&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/thead&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;tbody&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;rows&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/tbody&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var FilterProductTable = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //初始化state&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getInitialState: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filterText:&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      stockOnly:false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //回调函数，state传值即时更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handleUserInput: function(filterText, stockOnly) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filterText: filterText,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      stockOnly: stockOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;SearchBar filterText=&amp;#123;this.state.filterText&amp;#125; stockOnly=&amp;#123;this.state.stockOnly&amp;#125; onUserInput=&amp;#123;this.handleUserInput&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;ProductTable filterText=&amp;#123;this.state.filterText&amp;#125; stockOnly=&amp;#123;this.state.stockOnly&amp;#125; products=&amp;#123;this.props.products&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;FilterProductTable products=&amp;#123;PRODUCTS&amp;#125; /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  document.getElementById(&amp;apos;content&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;相关知识总结&quot;&gt;&lt;a href=&quot;#相关知识总结&quot; class=&quot;headerlink&quot; title=&quot;相关知识总结&quot;&gt;&lt;/a&gt;相关知识总结&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;组件划分遵循&lt;strong&gt;单一功能原则&lt;/strong&gt;，由上往下，由大到小依次组件化；&lt;/li&gt;
&lt;li&gt;React应用搭建三部曲&lt;ul&gt;
&lt;li&gt;通过props搭建基于数据结构和UI的静态版本；&lt;/li&gt;
&lt;li&gt;识别最小、最完整state，确认state生命周期（getInitialState() 初始化state，更新部分由state代替props）；&lt;/li&gt;
&lt;li&gt;添加反向数据流（回调，数据更新setState()）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;props 是一种从父级向子级传递数据的方式。&lt;/li&gt;
&lt;li&gt;无论何时用户改变了表单，都要更新 state 来反映用户的输入&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;React实现实时搜索查询，快速选择&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wangkailang.github.io/uploads/fliterSearchProduct.html&quot; title=&quot;[wangkailang] [http://wangkailang.github.io/uploads/fliterSearchProduct.html]&quot;&gt;效果查看&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;思路分析&quot;&gt;&lt;a href=&quot;#思路分析&quot; class=&quot;headerlink&quot; title=&quot;思路分析&quot;&gt;&lt;/a&gt;思路分析&lt;/h2&gt;&lt;h3 id=&quot;原型（mock）&quot;&gt;&lt;a href=&quot;#原型（mock）&quot; class=&quot;headerlink&quot; title=&quot;原型（mock）&quot;&gt;&lt;/a&gt;原型（mock）&lt;/h3&gt;  &lt;img src=&quot;/uploads/react-filter-serach-pic.png&quot; title=&quot;最终效果图片&quot;&gt;
    
    </summary>
    
      <category term="React" scheme="http://wangkailang.github.io/categories/React/"/>
    
    
      <category term="React" scheme="http://wangkailang.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Linux常识</title>
    <link href="http://wangkailang.github.io/2016/03/21/linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://wangkailang.github.io/2016/03/21/linux常用指令/</id>
    <published>2016-03-21T09:43:25.000Z</published>
    <updated>2016-03-22T03:18:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Linux是多用户多任务分时操作系统&quot;&gt;&lt;a href=&quot;#Linux是多用户多任务分时操作系统&quot; class=&quot;headerlink&quot; title=&quot;Linux是多用户多任务分时操作系统&quot;&gt;&lt;/a&gt;Linux是多用户多任务分时操作系统&lt;/h2&gt;&lt;p&gt;Linux中有些用户是用来完成特定任务的(称之为用户组)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nobody admin, ftp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;man-联机获取指令帮助&quot;&gt;&lt;a href=&quot;#man-联机获取指令帮助&quot; class=&quot;headerlink&quot; title=&quot;man 联机获取指令帮助&quot;&gt;&lt;/a&gt;man 联机获取指令帮助&lt;/h2&gt;&lt;h2 id=&quot;etc-passwd文件查看用户&quot;&gt;&lt;a href=&quot;#etc-passwd文件查看用户&quot; class=&quot;headerlink&quot; title=&quot;/etc/passwd文件查看用户&quot;&gt;&lt;/a&gt;/etc/passwd文件查看用户&lt;/h2&gt;&lt;p&gt;存放用户基本信息，文件内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:99:99:Nobody:/:/sbin/nologin
avahi-autoipd:x:170:170:Avahi IPv4LL Stack:/var/lib/avahi-autoipd:/sbin/nologin
systemd-bus-proxy:x:999:997:systemd Bus Proxy:/:/sbin/nologin
systemd-network:x:998:996:systemd Network Management:/:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
polkitd:x:997:995:User for polkitd:/:/sbin/nologin
tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin
postfix:x:89:89::/var/spool/postfix:/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
kailang:x:1000:1000:kailang:/home/kailang:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;文件的每一行代表一个用户&lt;br&gt;每一行由冒号“：”分成7个字段，结构如下：&lt;br&gt;  &lt;strong&gt; 用户名： 密码：UID：GID：用户全名：home目录：shell &lt;/strong&gt;&lt;br&gt;        //密码字段统一用”x”表示&lt;br&gt;        //比较重要的是UID（User ID） GID（Group ID），Linux只靠它们来识别&lt;br&gt;        //0是root用户，1～999属于系统用户，1000～4294967295属于普通用户&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;etc-group文件查看组&quot;&gt;&lt;a href=&quot;#etc-group文件查看组&quot; class=&quot;headerlink&quot; title=&quot;/etc/group文件查看组&quot;&gt;&lt;/a&gt;/etc/group文件查看组&lt;/h2&gt;&lt;p&gt;跟用户组有关的文件，文件内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin:x:1:
daemon:x:2:
sys:x:3:
adm:x:4:
tty:x:5:
disk:x:6:
lp:x:7:
mem:x:8:
kmem:x:9:
wheel:x:10:
cdrom:x:11:
mail:x:12:postfix
man:x:15:
dialout:x:18:
floppy:x:19:
games:x:20:
tape:x:30:
video:x:39:
ftp:x:50:
lock:x:54:
audio:x:63:
nobody:x:99:
users:x:100:
utmp:x:22:
utempter:x:35:
ssh_keys:x:999:
avahi-autoipd:x:170:
input:x:998:
systemd-journal:x:190:
systemd-bus-proxy:x:997:
systemd-network:x:996:
dbus:x:81:
polkitd:x:995:
dip:x:40:
tss:x:59:
postdrop:x:90:
postfix:x:89:
sshd:x:74:
kailang:x:1000:kailang
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;每一行代表一个用户组&lt;br&gt;被冒号分成四个字段，分别表示&lt;br&gt;&lt;strong&gt; 组名：用户组密码：GID：用户组内的用户名 &lt;/strong&gt;   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;etc-shadow专门管理密码&quot;&gt;&lt;a href=&quot;#etc-shadow专门管理密码&quot; class=&quot;headerlink&quot; title=&quot;/etc/shadow专门管理密码&quot;&gt;&lt;/a&gt;/etc/shadow专门管理密码&lt;/h2&gt;&lt;h2 id=&quot;管理用户和组&quot;&gt;&lt;a href=&quot;#管理用户和组&quot; class=&quot;headerlink&quot; title=&quot;管理用户和组&quot;&gt;&lt;/a&gt;管理用户和组&lt;/h2&gt;&lt;p&gt;Linux为用户的增，删，改提供了基本的命令，实际上就是对上面的文件进行了修改。&lt;/p&gt;
&lt;p&gt;Linux添加新用户&lt;br&gt;    useradd “新用户”&lt;/p&gt;
&lt;h2 id=&quot;文件属性和权限&quot;&gt;&lt;a href=&quot;#文件属性和权限&quot; class=&quot;headerlink&quot; title=&quot;文件属性和权限&quot;&gt;&lt;/a&gt;文件属性和权限&lt;/h2&gt;&lt;p&gt;使用ls的-l命令&lt;br&gt;&lt;img src=&quot;/uploads/linux-li.png&quot; title=&quot;li -l指令结构图片&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/linux-quanxian.png&quot; title=&quot;文件属性和展现结构图片&quot;&gt;&lt;br&gt;&lt;img src=&quot;/uploads/linux-file-type.png&quot; title=&quot;文件类型和权限分析图片&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一个字符用于描述文件类型，可有的取值：- 、d、l、b、c、s和p 。&lt;br&gt;  － “－”代表一个普通文件&lt;br&gt;  － “d”代表这是一个目录&lt;br&gt;  － “l”代表软连接，硬连接没有特使标记&lt;br&gt;  － “b”和“c”代表文件设备，“b”是块设备，如磁盘。“c”是字符设备，如鼠标，键盘等需要连续串行读写的设备&lt;br&gt;  － “s”代表套接字（socket）文件，一般使用Unix domain socket时会创建这种类型的文件&lt;br&gt;  － “p”管道文件&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Linux是多用户多任务分时操作系统&quot;&gt;&lt;a href=&quot;#Linux是多用户多任务分时操作系统&quot; class=&quot;headerlink&quot; title=&quot;Linux是多用户多任务分时操作系统&quot;&gt;&lt;/a&gt;Linux是多用户多任务分时操作系统&lt;/h2&gt;&lt;p&gt;Linux中有些用户是用来完成特定任务的(称之为用户组)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nobody admin, ftp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;man-联机获取指令帮助&quot;&gt;&lt;a href=&quot;#man-联机获取指令帮助&quot; class=&quot;headerlink&quot; title=&quot;man 联机获取指令帮助&quot;&gt;&lt;/a&gt;man 联机获取指令帮助&lt;/h2&gt;&lt;h2 id=&quot;etc-passwd文件查看用户&quot;&gt;&lt;a href=&quot;#etc-passwd文件查看用户&quot; class=&quot;headerlink&quot; title=&quot;/etc/passwd文件查看用户&quot;&gt;&lt;/a&gt;/etc/passwd文件查看用户&lt;/h2&gt;&lt;p&gt;存放用户基本信息，文件内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:99:99:Nobody:/:/sbin/nologin
avahi-autoipd:x:170:170:Avahi IPv4LL Stack:/var/lib/avahi-autoipd:/sbin/nologin
systemd-bus-proxy:x:999:997:systemd Bus Proxy:/:/sbin/nologin
systemd-network:x:998:996:systemd Network Management:/:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
polkitd:x:997:995:User for polkitd:/:/sbin/nologin
tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin
postfix:x:89:89::/var/spool/postfix:/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
kailang:x:1000:1000:kailang:/home/kailang:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;文件的每一行代表一个用户&lt;br&gt;每一行由冒号“：”分成7个字段，结构如下：&lt;br&gt;  &lt;strong&gt; 用户名： 密码：UID：GID：用户全名：home目录：shell &lt;/strong&gt;&lt;br&gt;        //密码字段统一用”x”表示&lt;br&gt;        //比较重要的是UID（User ID） GID（Group ID），Linux只靠它们来识别&lt;br&gt;        //0是root用户，1～999属于系统用户，1000～4294967295属于普通用户&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangkailang.github.io/categories/Linux/"/>
    
    
      <category term="Linux常识" scheme="http://wangkailang.github.io/tags/Linux%E5%B8%B8%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>centos ssh 配置</title>
    <link href="http://wangkailang.github.io/2016/03/21/centos-ssh-%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE/"/>
    <id>http://wangkailang.github.io/2016/03/21/centos-ssh-密钥配置/</id>
    <published>2016-03-21T06:23:37.000Z</published>
    <updated>2016-03-21T08:21:55.000Z</updated>
    
    <content type="html">&lt;p&gt;配置文件 在/etc/ssh/目录下有ssh_config和sshd_config，ssd_config是客服端配置文件，sshd_config是服务端配置文件。&lt;/p&gt;
&lt;h2 id=&quot;centos服务器上ssh基本环境&quot;&gt;&lt;a href=&quot;#centos服务器上ssh基本环境&quot; class=&quot;headerlink&quot; title=&quot;centos服务器上ssh基本环境&quot;&gt;&lt;/a&gt;centos服务器上ssh基本环境&lt;/h2&gt;&lt;h3 id=&quot;ssh安装&quot;&gt;&lt;a href=&quot;#ssh安装&quot; class=&quot;headerlink&quot; title=&quot;ssh安装&quot;&gt;&lt;/a&gt;ssh安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;ssh-install&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//yum 跟新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//ssh 安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//启动ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service sshd start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//ssh设置为开机启动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig sshd on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般默认CentOS已经安装了OpenSSH，即使你是最小化安装也是如此。&lt;/p&gt;
&lt;h3 id=&quot;ssh配置&quot;&gt;&lt;a href=&quot;#ssh配置&quot; class=&quot;headerlink&quot; title=&quot;ssh配置&quot;&gt;&lt;/a&gt;ssh配置&lt;/h3&gt;&lt;p&gt;使用root登录修改配置文件：/etc/ssh/sshd_config，根据红色框内示例修改，如下：&lt;/p&gt;
 &lt;img src=&quot;/uploads/centos-ssh-peizhi.png&quot; class=&quot;full-image&quot; title=&quot;centos ssh配置图片&quot;&gt;
&lt;h2 id=&quot;密钥生成与使用&quot;&gt;&lt;a href=&quot;#密钥生成与使用&quot; class=&quot;headerlink&quot; title=&quot;密钥生成与使用&quot;&gt;&lt;/a&gt;密钥生成与使用&lt;/h2&gt;&lt;h3 id=&quot;生成密钥对&quot;&gt;&lt;a href=&quot;#生成密钥对&quot; class=&quot;headerlink&quot; title=&quot;生成密钥对&quot;&gt;&lt;/a&gt;生成密钥对&lt;/h3&gt;&lt;p&gt;本地操作生成密钥对&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//根据提示完成&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;得到两个文件，id_rsa 是私钥，id_rsa.pub 是公钥。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;上传公钥到给服务器&quot;&gt;&lt;a href=&quot;#上传公钥到给服务器&quot; class=&quot;headerlink&quot; title=&quot;上传公钥到给服务器&quot;&gt;&lt;/a&gt;上传公钥到给服务器&lt;/h3&gt;&lt;p&gt;找到服务器ip，上传公钥到服务器指定目录文件，重启sshd。&lt;br&gt;服务器端：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//查看ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//若ifconfig失效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install net-tools&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;本地：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//上床公钥&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//scp [本地公钥位置] [服务器指定文件名称和文件位置]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scp [....]/.ssh/id_rsa.pub root@[服务器ip]:/etc/ssh/authorized.keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重启sshd，即可通过ssh远程登录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//修改上传文件权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 644 authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service sshd restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;配置文件 在/etc/ssh/目录下有ssh_config和sshd_config，ssd_config是客服端配置文件，sshd_config是服务端配置文件。&lt;/p&gt;
&lt;h2 id=&quot;centos服务器上ssh基本环境&quot;&gt;&lt;a href=&quot;#centos服务器上ssh基本环境&quot; class=&quot;headerlink&quot; title=&quot;centos服务器上ssh基本环境&quot;&gt;&lt;/a&gt;centos服务器上ssh基本环境&lt;/h2&gt;&lt;h3 id=&quot;ssh安装&quot;&gt;&lt;a href=&quot;#ssh安装&quot; class=&quot;headerlink&quot; title=&quot;ssh安装&quot;&gt;&lt;/a&gt;ssh安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;ssh-install&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//yum 跟新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//ssh 安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//启动ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;service sshd start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//ssh设置为开机启动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig sshd on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般默认CentOS已经安装了OpenSSH，即使你是最小化安装也是如此。&lt;/p&gt;
&lt;h3 id=&quot;ssh配置&quot;&gt;&lt;a href=&quot;#ssh配置&quot; class=&quot;headerlink&quot; title=&quot;ssh配置&quot;&gt;&lt;/a&gt;ssh配置&lt;/h3&gt;&lt;p&gt;使用root登录修改配置文件：/etc/ssh/sshd_config，根据红色框内示例修改，如下：&lt;/p&gt;
 &lt;img src=&quot;/uploads/centos-ssh-peizhi.png&quot; class=&quot;full-image&quot; title=&quot;centos ssh配置图片&quot;&gt;
&lt;h2 id=&quot;密钥生成与使用&quot;&gt;&lt;a href=&quot;#密钥生成与使用&quot; class=&quot;headerlink&quot; title=&quot;密钥生成与使用&quot;&gt;&lt;/a&gt;密钥生成与使用&lt;/h2&gt;&lt;h3 id=&quot;生成密钥对&quot;&gt;&lt;a href=&quot;#生成密钥对&quot; class=&quot;headerlink&quot; title=&quot;生成密钥对&quot;&gt;&lt;/a&gt;生成密钥对&lt;/h3&gt;&lt;p&gt;本地操作生成密钥对&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//根据提示完成&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;得到两个文件，id_rsa 是私钥，id_rsa.pub 是公钥。&lt;/p&gt;
    
    </summary>
    
      <category term="Centos Linux" scheme="http://wangkailang.github.io/categories/Centos-Linux/"/>
    
    
      <category term="Centos" scheme="http://wangkailang.github.io/tags/Centos/"/>
    
      <category term="ssh" scheme="http://wangkailang.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Mac centos 环境搭建</title>
    <link href="http://wangkailang.github.io/2016/03/21/Mac-centos-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://wangkailang.github.io/2016/03/21/Mac-centos-环境搭建/</id>
    <published>2016-03-21T06:08:43.000Z</published>
    <updated>2016-03-21T09:43:35.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;软件选择&quot;&gt;&lt;a href=&quot;#软件选择&quot; class=&quot;headerlink&quot; title=&quot;软件选择&quot;&gt;&lt;/a&gt;软件选择&lt;/h2&gt;&lt;p&gt;VirtualBox ＋ CentOS-7-x86_64-Minimal-1511.iso&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//查看centos版本
rpm -q centos-release
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;centos 常用yum源&lt;br&gt;&lt;a href=&quot;https://blog.itnmg.net/centos-yum-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.itnmg.net/centos-yum-source/&lt;/a&gt;&lt;br&gt;这里介绍几个源, Remi, RPMforge , EPEL,  CentALT , webtatic , Nginx 如果你是使用的国内主机, 建议添加国内源, 如网易, 搜狐,中科大,中移动等等.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件选择&quot;&gt;&lt;a href=&quot;#软件选择&quot; class=&quot;headerlink&quot; title=&quot;软件选择&quot;&gt;&lt;/a&gt;软件选择&lt;/h2&gt;&lt;p&gt;VirtualBox ＋ CentOS-7-x86_64-Minimal-1511.iso&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/
    
    </summary>
    
      <category term="Centos Linux" scheme="http://wangkailang.github.io/categories/Centos-Linux/"/>
    
    
      <category term="Centos" scheme="http://wangkailang.github.io/tags/Centos/"/>
    
      <category term="mac上搭建linux环境" scheme="http://wangkailang.github.io/tags/mac%E4%B8%8A%E6%90%AD%E5%BB%BAlinux%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wangkailang.github.io/2016/03/10/hello-world/"/>
    <id>http://wangkailang.github.io/2016/03/10/hello-world/</id>
    <published>2016-03-10T09:10:04.000Z</published>
    <updated>2016-03-21T08:23:46.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="Hello World" scheme="http://wangkailang.github.io/tags/Hello-World/"/>
    
  </entry>
  
</feed>
